{
  "version": 3,
  "sources": ["<define:__slib_info>", "../../node_modules/@randajan/simple-lib/src/tools/logger.js", "../../node_modules/@randajan/simple-lib/src/info/index.js", "../../node_modules/@randajan/simple-lib/src/node/index.js", "../../dist/<define:__slib_info>", "../../node_modules/@randajan/simple-lib/src/tools/logger.js", "../../node_modules/@randajan/simple-lib/src/info/index.js", "../../node_modules/@randajan/simple-lib/src/lib/index.js", "../../src/tools.js", "../../src/index.js", "../src/index.js"],
  "sourcesContent": ["", "import chalkNative from \"chalk\";\r\n\r\nconst chalkProps = Object.getOwnPropertyNames(Object.getPrototypeOf(chalkNative)).filter(v=>v!==\"constructor\");\r\n\r\nclass Logger extends Function {\r\n    constructor(formater, chalkInit) {\r\n        super();\r\n        const chalk = chalkInit||chalkNative;\r\n\r\n        const log = (...msgs)=>{ console.log(chalk(formater(msgs))); }\r\n        const self = Object.setPrototypeOf(log.bind(), new.target.prototype);\r\n\r\n        for (const prop of chalkProps) {\r\n            Object.defineProperty(self, prop, { get: _=>new Logger(formater, chalk[prop]), enumerable:false });\r\n        }\r\n        \r\n        return self;\r\n    }\r\n}\r\n\r\nexport const logger = (...prefixes)=>{\r\n    const now = _=>(new Date()).toLocaleTimeString(\"cs-CZ\");\r\n    prefixes = prefixes.filter(v=>!!v).join(\" \");\r\n\r\n    return new Logger(msgs=>`${prefixes} | ${now()} | ${msgs.join(\" \")}`);\r\n}", "const enumerable = true;\r\nconst lockObject = o=>{\r\n    if (typeof o !== \"object\") { return o; }\r\n\r\n    const r = {};\r\n    for (const i in o) {\r\n        const descriptor = { enumerable };\r\n        let val = o[i];\r\n        if (val instanceof Array) { descriptor.get = _=>[...val]; }\r\n        else { descriptor.value = lockObject(val); }\r\n        Object.defineProperty(r, i, descriptor);\r\n    }\r\n\r\n    return r;\r\n}\r\n\r\nexport const info = lockObject(__slib_info);\r\nexport default info;", "import { parentPort } from \"worker_threads\";\r\nimport { info } from \"../info\";\r\nimport { logger } from \"../tools/logger\";\r\n\r\nexport default info;\r\n\r\nexport const log = logger(info.name, info.version, info.env);\r\n\r\nexport {\r\n    info,\r\n}\r\n\r\nparentPort.on(\"message\", msg=>{\r\n    if (msg===\"shutdown\") { process.exit(0); }\r\n});\r\n\r\nprocess.on('uncaughtException', e=>{\r\n  console.log(e.stack);\r\n});", "", "import chalkNative from \"chalk\";\r\n\r\nconst chalkProps = Object.getOwnPropertyNames(Object.getPrototypeOf(chalkNative)).filter(v=>v!==\"constructor\");\r\n\r\nclass Logger extends Function {\r\n    constructor(formater, chalkInit) {\r\n        super();\r\n        const chalk = chalkInit||chalkNative;\r\n\r\n        const log = (...msgs)=>{ console.log(chalk(formater(msgs))); }\r\n        const self = Object.setPrototypeOf(log.bind(), new.target.prototype);\r\n\r\n        for (const prop of chalkProps) {\r\n            Object.defineProperty(self, prop, { get: _=>new Logger(formater, chalk[prop]), enumerable:false });\r\n        }\r\n        \r\n        return self;\r\n    }\r\n}\r\n\r\nexport const logger = (...prefixes)=>{\r\n    const now = _=>(new Date()).toLocaleTimeString(\"cs-CZ\");\r\n    prefixes = prefixes.filter(v=>!!v).join(\" \");\r\n\r\n    return new Logger(msgs=>`${prefixes} | ${now()} | ${msgs.join(\" \")}`);\r\n}", "const enumerable = true;\r\nconst lockObject = o=>{\r\n    if (typeof o !== \"object\") { return o; }\r\n\r\n    const r = {};\r\n    for (const i in o) {\r\n        const descriptor = { enumerable };\r\n        let val = o[i];\r\n        if (val instanceof Array) { descriptor.get = _=>[...val]; }\r\n        else { descriptor.value = lockObject(val); }\r\n        Object.defineProperty(r, i, descriptor);\r\n    }\r\n\r\n    return r;\r\n}\r\n\r\nexport const info = lockObject(__slib_info);\r\nexport default info;", "import { info } from \"../info\";\r\nimport { logger } from \"../tools/logger\";\r\n\r\nexport default info;\r\n\r\nexport const log = logger(info.name, info.version, info.env);\r\n\r\nexport {\r\n    info,\r\n}", "export const numOrZero = num=>{ \r\n    const n = Number(num);\r\n    return isNaN(n) ? 0 : Math.max(0, n);\r\n}\r\n\r\nexport const toArray = any=>{\r\n    if (any == null) { return []; }\r\n    if (Array.isArray(any)) { return any; }\r\n    return [ any ];\r\n}", "\nimport { info, log } from \"@randajan/simple-lib/lib\";\nimport { numOrZero, toArray } from \"./tools\";\n\nconst _pass = [\"all\", \"first\", \"last\"];\n\nexport class Queue extends Function {\n\n    constructor(processTasks, opt={}) {\n        super();\n\n        opt = typeof opt === \"object\" ? opt : {};\n\n        if (typeof processTasks !== \"function\") { throw Error(\"Queue(...) expect first argument to be function\"); }\n\n        if (!opt.pass) { opt.pass = \"all\"; }\n        else if (!_pass.includes(opt.pass)) { throw Error(`Queue(...) expect opt.pass to be one of: '${_pass.join(\"|\")}'`); }\n        \n        const args = toArray(opt.args);\n        const pass = opt.pass;\n        const softMs = numOrZero(opt.softMs);\n        const hardMs = numOrZero(opt.hardMs);\n        const maxSize = numOrZero(opt.maxSize);\n        const hardMsActive = hardMs > softMs;\n\n        let pcq, intA, intB, startAt, tasks = [];\n\n        if (pass === \"all\") { pcq = q=>processTasks(...args, q); }\n        else if (pass === \"first\") { pcq = q=>processTasks(...args, ...q[0]); }\n        else if (pass === \"last\") { pcq = q=>processTasks(...args, ...q[q.length-1]); }\n\n        const execute = _=>{\n            clearTimeout(intA);\n            clearTimeout(intB);\n            const q = tasks;\n            tasks = [];\n            startAt = undefined;\n            pcq(q);\n        };\n\n        const call = (...args)=>{\n            clearTimeout(intA);\n            tasks.push(args);\n            if (maxSize && tasks.length >= maxSize) { return execute(); }\n\n            intA = setTimeout(execute, softMs);\n            if (tasks.length !== 1) { return; }\n\n            startAt = Date.now();\n            if (hardMsActive) { intB = setTimeout(execute, hardMs); }\n        }\n\n        const self = Object.setPrototypeOf(call, new.target.prototype);\n\n        Object.defineProperties(self, {\n            isPending:{ enumerable:true, get:_=>!!startAt },\n            size:{ enumerable:true, get:_=>tasks.length },\n            startAt:{ enumerable:true, get:_=>startAt },\n            softEndAt:{ enumerable:true, get:_=>!startAt ? undefined : (startAt + softMs) },\n            hardEndAt:{ enumerable:true, get:_=>(!startAt || !hardMsActive) ? undefined : (startAt + hardMs) }\n        });\n\n        return self;\n    }\n}\n\nexport const createQueue = (processTasks, opt={})=>new Queue(processTasks, opt);\n\nexport default createQueue;", "\nimport { info, log } from \"@randajan/simple-lib/node\";\nimport createQueue from \"../../dist/index.js\";\n\n\n\nconst q = createQueue((...args)=>{\n    console.log(...args);\n}, {\n    softMs:1000,\n    hardMs:3000,\n    maxSize:10,\n    pass:\"all\"\n});\n\nlet c = 0;\nsetInterval(_=>{\n    q(c+=1);\n}, 100);\n"],
  "mappings": "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",
  "names": ["log", "chalkNative", "define_slib_info_default", "chalkProps", "Logger", "log", "logger", "enumerable", "lockObject", "info", "q", "args"]
}
